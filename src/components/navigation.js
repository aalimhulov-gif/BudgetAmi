// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
import { getCurrentUser, logout } from '../firebase/auth.js';
import { showToast } from './toast.js';

class NavigationManager {
    constructor() {
        this.currentPage = 'home';
        this.pages = {
            home: { title: '–ì–ª–∞–≤–Ω–∞—è', icon: 'üè†' },
            categories: { title: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üìÅ' },
            limits: { title: '–õ–∏–º–∏—Ç—ã', icon: '‚ö†Ô∏è' },
            goals: { title: '–¶–µ–ª–∏', icon: 'üéØ' },
            operations: { title: '–û–ø–µ—Ä–∞—Ü–∏–∏', icon: 'üìã' },
            settings: { title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' }
        };
        this.init();
    }

    init() {
        this.createNavigationElements();
        this.addEventListeners();
        this.updateUserInfo();
    }

    createNavigationElements() {
        // –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —É–∂–µ –µ—Å—Ç—å –≤ HTML, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë
        this.updateNavigation();
    }

    updateNavigation() {
        const nav = document.querySelector('.main-nav');
        if (!nav) return;

        // –û—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        nav.innerHTML = Object.entries(this.pages).map(([pageId, page]) => `
            <a href="#" class="nav-link ${pageId === this.currentPage ? 'active' : ''}" 
               data-page="${pageId}">
                <span class="nav-icon">${page.icon}</span>
                <span class="nav-text">${page.title}</span>
            </a>
        `).join('');
    }

    addEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.addEventListener('click', (e) => {
            const navLink = e.target.closest('.nav-link');
            if (navLink) {
                e.preventDefault();
                const page = navLink.dataset.page;
                if (page) {
                    this.navigateToPage(page);
                }
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
        document.addEventListener('click', (e) => {
            if (e.target.id === 'logout-btn' || e.target.closest('#logout-btn')) {
                e.preventDefault();
                this.handleLogout();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
        document.addEventListener('click', (e) => {
            if (e.target.id === 'theme-toggle' || e.target.closest('#theme-toggle')) {
                e.preventDefault();
                this.toggleTheme();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –≤–∞–ª—é—Ç—ã
        document.addEventListener('change', (e) => {
            if (e.target.id === 'currency-selector') {
                this.changeCurrency(e.target.value);
            }
        });
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    navigateToPage(pageId) {
        if (!this.pages[pageId]) {
            console.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', pageId);
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.currentPage = pageId;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.querySelectorAll('.nav-link').forEach(link => {
            link.classList.toggle('active', link.dataset.page === pageId);
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.querySelectorAll('.page').forEach(page => {
            page.style.display = 'none';
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const currentPageElement = document.getElementById(`${pageId}-page`);
        if (currentPageElement) {
            currentPageElement.style.display = 'block';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.updatePageTitle(pageId);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.loadPageData(pageId);

        // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        history.pushState({ page: pageId }, '', `#${pageId}`);
    }

    updatePageTitle(pageId) {
        const page = this.pages[pageId];
        const titleElement = document.querySelector('.page-title');
        if (titleElement && page) {
            titleElement.textContent = page.title;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º title –¥–æ–∫—É–º–µ–Ω—Ç–∞
        document.title = `${page.title} - –°–µ–º–µ–π–Ω—ã–π –ë—é–¥–∂–µ—Ç`;
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async loadPageData(pageId) {
        try {
            switch (pageId) {
                case 'home':
                    await this.loadHomePage();
                    break;
                case 'categories':
                    await this.loadCategoriesPage();
                    break;
                case 'limits':
                    await this.loadLimitsPage();
                    break;
                case 'goals':
                    await this.loadGoalsPage();
                    break;
                case 'operations':
                    await this.loadOperationsPage();
                    break;
                case 'settings':
                    await this.loadSettingsPage();
                    break;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
            showToast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', 'error');
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async loadHomePage() {
        // –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        // –≠—Ç–æ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    async loadCategoriesPage() {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–∏–º–∏—Ç–æ–≤
    async loadLimitsPage() {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–∏–º–∏—Ç–æ–≤');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ü–µ–ª–µ–π
    async loadGoalsPage() {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ü–µ–ª–µ–π');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–µ—Ä–∞—Ü–∏–π
    async loadOperationsPage() {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–µ—Ä–∞—Ü–∏–π');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
    async loadSettingsPage() {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    updateUserInfo() {
        const user = getCurrentUser();
        const userInfo = document.querySelector('.user-info');
        
        if (userInfo && user) {
            const userNameElement = userInfo.querySelector('.user-name');
            const userEmailElement = userInfo.querySelector('.user-email');
            
            if (userNameElement) {
                userNameElement.textContent = user.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            }
            
            if (userEmailElement) {
                userEmailElement.textContent = user.email;
            }
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    async handleLogout() {
        try {
            await logout();
            showToast('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', 'success');
            
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            setTimeout(() => {
                window.location.href = 'index.html';
            }, 1000);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
            showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', 'error');
        }
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    toggleTheme() {
        const body = document.body;
        const currentTheme = body.getAttribute('data-theme') || 'dark';
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        body.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
            themeToggle.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
        
        showToast(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${newTheme === 'dark' ? '—Ç–µ–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é'}`, 'info');
    }

    // –°–º–µ–Ω–∞ –≤–∞–ª—é—Ç—ã
    changeCurrency(currency) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–º–µ–Ω—ã –≤–∞–ª—é—Ç—ã
        console.log('–°–º–µ–Ω–∞ –≤–∞–ª—é—Ç—ã –Ω–∞:', currency);
        showToast(`–í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${currency}`, 'info');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã
        const currencyDisplay = document.getElementById('current-currency');
        if (currencyDisplay) {
            currencyDisplay.textContent = currency;
        }
        
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ —Å–º–µ–Ω—ã –≤–∞–ª—é—Ç—ã
        document.dispatchEvent(new CustomEvent('currencyChanged', {
            detail: { currency }
        }));
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    getCurrentPage() {
        return this.currentPage;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ URL
    initFromURL() {
        const hash = window.location.hash.slice(1);
        if (hash && this.pages[hash]) {
            this.navigateToPage(hash);
        } else {
            this.navigateToPage('home');
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
    handlePopState() {
        window.addEventListener('popstate', (e) => {
            if (e.state && e.state.page) {
                this.navigateToPage(e.state.page);
            } else {
                this.navigateToPage('home');
            }
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
    updateBreadcrumbs(path) {
        const breadcrumbs = document.querySelector('.breadcrumbs');
        if (!breadcrumbs) return;

        const crumbs = path.map((item, index) => {
            const isLast = index === path.length - 1;
            return `
                <span class="breadcrumb-item ${isLast ? 'active' : ''}">
                    ${!isLast ? `<a href="#" data-page="${item.page}">${item.title}</a>` : item.title}
                </span>
            `;
        }).join('<span class="breadcrumb-separator">‚Ä∫</span>');

        breadcrumbs.innerHTML = crumbs;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    showPageLoading(pageId) {
        const page = document.getElementById(`${pageId}-page`);
        if (page) {
            page.classList.add('loading');
        }
    }

    // –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    hidePageLoading(pageId) {
        const page = document.getElementById(`${pageId}-page`);
        if (page) {
            page.classList.remove('loading');
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    canAccessPage(pageId) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        const user = getCurrentUser();
        return user !== null;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    initTheme() {
        const savedTheme = localStorage.getItem('theme') || 'dark';
        document.body.setAttribute('data-theme', savedTheme);
        
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
            themeToggle.textContent = savedTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const navigationManager = new NavigationManager();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    navigationManager.initTheme();
    navigationManager.initFromURL();
    navigationManager.handlePopState();
});

export default navigationManager;
export const navigateToPage = (pageId) => navigationManager.navigateToPage(pageId);
export const getCurrentPage = () => navigationManager.getCurrentPage();
export const updateUserInfo = () => navigationManager.updateUserInfo();